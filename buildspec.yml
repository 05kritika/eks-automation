version: 0.2

#env:
#  variables:
#    key: "value"
#    key: "value"

phases:
  install:
    commands:
      
      - "apt update"
      - "apt install -y awscli git python3"
      - "which aws"
      
     # - "pip install kubernetes"
     # - "wget https://github.com/kubernetes/kops/releases/download/1.8.0/kops-linux-amd64"
     # - "chmod +x kops-linux-amd64"
     # - "mv kops-linux-amd64 /usr/local/bin/kops"
      
     # - "curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
     # - "chmod +x kubectl"
     # - "mv ./kubectl /usr/local/bin/kubectl"
      #- "kubectl version"
      
     # - "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3"
     # - "chmod 700 get_helm.sh"
     # - "./get_helm.sh"
     # - "helm version"

     # - "wget https://storage.googleapis.com/kubernetes-helm/helm-v2.8.2-linux-amd64.tar.gz -O helm.tar.gz; tar -xzf helm.tar.gz"
     # - "chmod +x ./linux-amd64/helm"
     # - "mv ./linux-amd64/helm /usr/local/bin/helm"
       
     # - sudo pip install boto3
     # - wget https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip
      #- wget https://releases.hashicorp.com/terraform/0.10.4/terraform_0.10.4_linux_amd64.zip
     # - unzip terraform_0.12.26_linux_amd64.zip
     # - sudo mv terraform /bin
     # - rm terraform_0.12.26_linux_amd64.zip
     # - apt-get update
     # - apt-cache search source
     # - apt-get install -y curl jq
     # - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/aws_cred_export.txt # work around https://github.com/hashicorp/terraform/issues/8746
      
     # - echo "Prepare terraform file"
      - cd eks-terraform 
      - pwd
      #- terraform init
      #- terraform plan
      #- terraform apply
      
      
     # - . /tmp/aws_cred_export.txt && terraform init
  build:
    commands:
      #- terraform apply -input=false -auto-approve
      #- terraform destroy -input=false -auto-approve
     # - . /tmp/aws_cred_export.txt &&  python runterraform.js.py $region $applicationname $destroy
      - echo "Post apply build"
  post_build:
    commands:
      - echo "Nothing to do in the post_build for now"
      - aws sts get-caller-identity
     # - . /tmp/aws_cred_export.txt && aws eks --region us-east-1 update-kubeconfig --name $(terraform output cluster_name)
     # - kubectl get nodes
